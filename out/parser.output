Terminaux inutilisés dans la grammaire

    BR_CLOSE
    COLOR
    UNKNOWN
    TIMES
    SLASH
    UMINUS


Grammaire

    0 $accept: input $end

    1 input: ε
    2      | input line

    3 line: NEWLINE
    4     | FRAGMENT
    5     | FRAG_END
    6     | IN_ACCESS
    7     | ARG
    8     | CHAR
    9     | INPUT line
   10     | OUTPUT line
   11     | END
   12     | COMM


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    error (256)
    FRAG_END (258) 5
    FRAGMENT (259) 4
    BR_CLOSE (260)
    INPUT <input> (261) 9
    IN_ACCESS <input> (262) 6
    CHAR <input> (263) 8
    ARG <input> (264) 7
    NEWLINE <input> (265) 3
    OUTPUT <output> (266) 10
    END (267) 11
    COMM (268) 12
    COLOR (269)
    UNKNOWN (270)
    TIMES (271)
    SLASH (272)
    UMINUS (273)


Non-terminaux, suivis des règles où ils apparaissent

    $accept (19)
        à gauche: 0
    input (20)
        à gauche: 1 2
        à droite: 0 2
    line (21)
        à gauche: 3 4 5 6 7 8 9 10 11 12
        à droite: 2 9 10


État 0

    0 $accept: • input $end

    $défaut  réduction par utilisation de la règle 1 (input)

    input  aller à l'état 1


État 1

    0 $accept: input • $end
    2 input: input • line

    $end       décalage et aller à l'état 2
    FRAG_END   décalage et aller à l'état 3
    FRAGMENT   décalage et aller à l'état 4
    INPUT      décalage et aller à l'état 5
    IN_ACCESS  décalage et aller à l'état 6
    CHAR       décalage et aller à l'état 7
    ARG        décalage et aller à l'état 8
    NEWLINE    décalage et aller à l'état 9
    OUTPUT     décalage et aller à l'état 10
    END        décalage et aller à l'état 11
    COMM       décalage et aller à l'état 12

    line  aller à l'état 13


État 2

    0 $accept: input $end •

    $défaut  accepter


État 3

    5 line: FRAG_END •

    $défaut  réduction par utilisation de la règle 5 (line)


État 4

    4 line: FRAGMENT •

    $défaut  réduction par utilisation de la règle 4 (line)


État 5

    9 line: INPUT • line

    FRAG_END   décalage et aller à l'état 3
    FRAGMENT   décalage et aller à l'état 4
    INPUT      décalage et aller à l'état 5
    IN_ACCESS  décalage et aller à l'état 6
    CHAR       décalage et aller à l'état 7
    ARG        décalage et aller à l'état 8
    NEWLINE    décalage et aller à l'état 9
    OUTPUT     décalage et aller à l'état 10
    END        décalage et aller à l'état 11
    COMM       décalage et aller à l'état 12

    line  aller à l'état 14


État 6

    6 line: IN_ACCESS •

    $défaut  réduction par utilisation de la règle 6 (line)


État 7

    8 line: CHAR •

    $défaut  réduction par utilisation de la règle 8 (line)


État 8

    7 line: ARG •

    $défaut  réduction par utilisation de la règle 7 (line)


État 9

    3 line: NEWLINE •

    $défaut  réduction par utilisation de la règle 3 (line)


État 10

   10 line: OUTPUT • line

    FRAG_END   décalage et aller à l'état 3
    FRAGMENT   décalage et aller à l'état 4
    INPUT      décalage et aller à l'état 5
    IN_ACCESS  décalage et aller à l'état 6
    CHAR       décalage et aller à l'état 7
    ARG        décalage et aller à l'état 8
    NEWLINE    décalage et aller à l'état 9
    OUTPUT     décalage et aller à l'état 10
    END        décalage et aller à l'état 11
    COMM       décalage et aller à l'état 12

    line  aller à l'état 15


État 11

   11 line: END •

    $défaut  réduction par utilisation de la règle 11 (line)


État 12

   12 line: COMM •

    $défaut  réduction par utilisation de la règle 12 (line)


État 13

    2 input: input line •

    $défaut  réduction par utilisation de la règle 2 (input)


État 14

    9 line: INPUT line •

    $défaut  réduction par utilisation de la règle 9 (line)


État 15

   10 line: OUTPUT line •

    $défaut  réduction par utilisation de la règle 10 (line)
